# -*- coding: utf-8 -*-
from aiogram import F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from aiogram.types import Message, ContentType

from database.database import get_admin_ids
from keyboards.keyboards import back
from states.states import BotContentEditStates
from system.system import bot, CHANNEL_CHAT_ID
from system.system import router


@router.callback_query(F.data == "publish_advertisement_handler")
async def publish_advertisement_handler(query: CallbackQuery) -> None:
    """‚úç –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è"""

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.message.answer(
        text=(
            "‚úç <b>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>\n\n"
            "–ß—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –∏–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ <a href='https://t.me/+yjqd0uZQETc4NGEy'>¬´–ù–æ–≤–æ—Å—Ç–∏¬ª</a>, "
            "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π:\n"
            "‚û°Ô∏è <code>/send_news</code>\n\n"
            "üîπ –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è HTML-—Ä–∞–∑–º–µ—Ç–∫–∞).\n"
            "üîπ –ó–∞—Ç–µ–º –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî <b>–µ—Å–ª–∏ –æ–Ω–æ –Ω—É–∂–Ω–æ</b>.\n"
            "üîπ –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/skip</code>.\n\n"
            "–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. üì¢"
        ),
        reply_markup=back(),
        parse_mode="HTML",
        disable_web_page_preview=True
    )


@router.message(Command("send_news"))
async def start_news_sending(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ë–î
    admin_ids = get_admin_ids()

    if message.from_user.id not in admin_ids:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    await message.answer("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ (–º–æ–∂–Ω–æ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π).")
    await state.set_state(BotContentEditStates.waiting_for_news_text)


@router.message(BotContentEditStates.waiting_for_news_text)
async def receive_news_text(message: Message, state: FSMContext):
    if not message.text:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç (–º–æ–∂–Ω–æ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º).")
        return

    await state.update_data(news_text=message.html_text)
    await message.answer(
        "üñºÔ∏è –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ). –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ."
    )
    await state.set_state(BotContentEditStates.waiting_for_news_photo)


@router.message(Command("skip"))
async def skip_photo(message: Message, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"""

    admin_ids = get_admin_ids()

    if message.from_user.id not in admin_ids:
        return

    data = await state.get_data()
    news_text = data.get("news_text")
    if not news_text:
        await message.answer("‚ùå –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
        await state.clear()
        return

    try:
        await bot.send_message(
            chat_id=CHANNEL_CHAT_ID,
            text=news_text,
            parse_mode="HTML"
        )
        await message.answer("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ!")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
    finally:
        await state.clear()


@router.message(BotContentEditStates.waiting_for_news_photo, F.content_type.in_([ContentType.PHOTO]))
async def receive_news_photo(message: Message, state: FSMContext):
    photo = message.photo[-1]  # –±–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    caption = message.caption  # –µ—Å–ª–∏ HR –¥–æ–±–∞–≤–∏–ª –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ

    data = await state.get_data()
    news_text = data.get("news_text")

    final_caption = caption if caption else news_text

    try:
        await bot.send_photo(
            chat_id=CHANNEL_CHAT_ID,
            photo=photo.file_id,
            caption=final_caption,
            parse_mode="HTML"
        )
        await message.answer("‚úÖ –ù–æ–≤–æ—Å—Ç—å —Å —Ñ–æ—Ç–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ!")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
    finally:
        await state.clear()


@router.message(BotContentEditStates.waiting_for_news_photo)
async def not_photo(message: Message):
    """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –Ω–µ —Ñ–æ—Ç–æ ‚Äî –Ω–∞–ø–æ–º–Ω–∏—Ç—å"""
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /skip –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –±–µ–∑ —Ñ–æ—Ç–æ.")


def register_handlers_publish_advertisement_handler() -> None:
    router.callback_query.register(publish_advertisement_handler)  # ‚úç –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    router.message.register(skip_photo)  # –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
    router.message.register(start_news_sending)  # –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
