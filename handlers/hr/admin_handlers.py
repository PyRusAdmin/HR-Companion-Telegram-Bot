# -*- coding: utf-8 -*-
import os

import openpyxl
from aiogram import types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from loguru import logger
from openpyxl.workbook import Workbook
from peewee import IntegrityError

from database.database import get_user_bot_users, get_users, get_admin_ids, Admin
from system.system import router, bot


@router.message(Command('help'))
async def admin_send_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã"""
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ë–î
    admin_ids = get_admin_ids()

    if message.from_user.id not in admin_ids:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    """–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""

    await message.answer("–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞:\n\n"

                         "<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:</b>\n\n"

                         "<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:</b>\n"
                         "/edit_anonymous_question_handler - ‚ùì –ê–Ω–æ–Ω–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å\n"
                         "/edit_dictionary_handler - üìñ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫\n"
                         "/edit_faq_handler - üîç FAQ\n"
                         "/edit_news_handler - üì¢ –ù–æ–≤–æ—Å—Ç–∏ –∏ –∞–∫—Ü–∏–∏\n\n"

                         "<b>–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</b>\n"
                         "/get_a_list_of_users_registered_in_the_bot - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö "
                         "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ\n"
                         "/get_users_who_launched_the_bot - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–ø—É—Å–∫–∞—é—â–∏—Ö –±–æ—Ç–∞\n\n"

                         "<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
                         "/add_admin - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω—ã. –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /add_admin ID\n\n"

                         "/start - –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n", parse_mode="HTML")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ Excel —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–æ–≤
def create_excel_file(users_list):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ø–∏—Å–∫–æ–≤.
    –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ –∫–∞–∂–¥—ã–π –ø–æ–¥—Å–ø–∏—Å–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç 7 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ:
    [id_user, user_name, first_name, last_name, status, role, departments]
    """
    workbook = Workbook()
    sheet = workbook.active
    sheet.title = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"

    headers = [
        'ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        'Username',
        '–ò–º—è',
        '–§–∞–º–∏–ª–∏—è',
        '–°—Ç–∞—Ç—É—Å (–¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω)',
        '–†–æ–ª—å',
        '–û—Ç–¥–µ–ª—ã'
    ]
    sheet.append(headers)

    for user in users_list:
        # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Å–ø–∏—Å–∫–µ —Ä–æ–≤–Ω–æ 7 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if len(user) < 7:
            # –î–æ–ø–æ–ª–Ω—è–µ–º –¥–æ 7, –µ—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
            user = list(user) + [""] * (7 - len(user))
        sheet.append([
            user[0] or "",
            user[1] or "",
            user[2] or "",
            user[3] or "",
            user[4] or "",
            user[5] or "",
            user[6] or ""
        ])

    for column_cells in sheet.columns:
        length = max(len(str(cell.value or "")) for cell in column_cells)
        sheet.column_dimensions[column_cells[0].column_letter].width = length + 2

    return workbook


@router.message(Command('get_a_list_of_users_registered_in_the_bot'))
async def export_data(message: types.Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    await state.clear()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ë–î
        admin_ids = get_admin_ids()

        if message.from_user.id not in admin_ids:
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        users = get_users()

        if not users:
            await message.reply("‚ö†Ô∏è –í –±–∞–∑–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        workbook = create_excel_file(users)
        filename = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–æ—Ç–µ.xlsx'
        workbook.save(filename)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
        await message.answer_document(
            document=FSInputFile(filename),
            caption=("üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ\n\n"
                     "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏ /start –∏–ª–∏ /help")
        )

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(filename)

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞.")


def create_excel_file_start(users):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞.
    """
    workbook = openpyxl.Workbook()
    sheet = workbook.active
    sheet.title = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    headers = [
        'ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        'username',
        '–ò–º—è',
        '–§–∞–º–∏–ª–∏—è',
        '–¢–∏–ø —á–∞—Ç–∞',
        '–Ø–∑—ã–∫ Telegram',
        '–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞'
    ]
    sheet.append(headers)

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
    for user in users:
        sheet.append(user)

    return workbook


@router.message(Command("get_users_who_launched_the_bot"))
async def get_users_who_launched_the_bot(message: types.Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–ø—É—Å–∫–∞—é—â–∏—Ö –±–æ—Ç–∞"""
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ë–î
        admin_ids = get_admin_ids()

        if message.from_user.id not in admin_ids:
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        workbook = create_excel_file_start(get_user_bot_users())  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        filename = '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞.xlsx'
        workbook.save(filename)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        await bot.send_document(message.from_user.id, document=FSInputFile(filename),
                                caption=("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ\n\n"
                                         "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏ –Ω–∞ /start –∏–ª–∏ /help"))  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        os.remove(filename)  # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    except Exception as e:
        logger.error(e)


@router.message(Command('add_admin'))
async def add_admin(message: types.Message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤"""
    admin_ids = get_admin_ids()

    if message.from_user.id not in admin_ids:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü—Ä–∏–º–µ—Ä: /add_admin 123456789
    try:
        user_id = int(message.text.split()[1])
        Admin.create(user_id=user_id)
        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω—ã.")
    except (IndexError, ValueError):
        await message.reply("–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /add_admin <ID>")
    except IntegrityError:  # –ï—Å–ª–∏ ID —É–∂–µ –µ—Å—Ç—å –≤ –ë–î
        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º.")


def register_admin_greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    router.message.register(admin_send_start)
    router.message.register(export_data)
    router.message.register(get_users_who_launched_the_bot)
    router.message.register(add_admin)
